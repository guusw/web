#!/bin/bash
ROOT_PATH="$(pwd)"
USER=guus
NGINX_SBIN_PATH="$ROOT_PATH/nginx"
NGINX_CONFIG_PATH="$ROOT_PATH/conf/nginx/nginx.conf"
NGINX_BUILD_FLAGS="--with-http_ssl_module --prefix=$ROOT_PATH --sbin-path=$NGINX_SBIN_PATH --conf-path=$NGINX_CONFIG_PATH"
NGINX_DEBUG=1

PHP_CONFIG_PATH="$ROOT_PATH/conf/php"
PHP_PORT=9000
PHP_BIND="127.0.0.1:$PHP_PORT"

MYSQL_CONFIG_PATH="$ROOT_PATH/conf/mysql/my.cnf"
MYSQL_PORT=3306
MYSQL_USER="root"
MYSQL_PASSWORD="changeme"
MYSQL_DATABASE_NAME="tdrz"
MYSQL_ARGS="--defaults-file=$MYSQL_CONFIG_PATH"
MYSQL_LOGIN_ARGS="-u=$MYSQL_USER -p=$MYSQL_PASSWORD"

HTTP_PORT=2000
HTTPS_PORT=2001
SERVER_NAME="local.tdrz.nl"

DOCUMENT_ROOT="$ROOT_PATH/www"

# Uploaded data directory
TDRZ_DATA_DIR="$ROOT_PATH/data"

# The subdomain for accessing data
TDRZ_DATA_SUBDOMAIN=data

CERTBOT_DATA_PATH="$ROOT_PATH/certbot"
CERTBOT_CONFIG_PATH="$ROOT_PATH/conf/certbot"
CERTBOT_LIVE="$CERTBOT_DATA_PATH/live/$SERVER_NAME"
CERTBOT_WELL_KNOWN_PATH="$ROOT_PATH/letsencrypt"

# Use this to enable testing certificates
#  otherwise certificates generated by certbot (see ./run_certbot) are used
CERT_TEST=1

if [ $CERT_TEST -ne 0 ]
then
    CERT_PATH=testcrt.txt
    CERT_KEY_PATH=testkey.txt
else
    CERT_PATH=$CERTBOT_LIVE/fullchain.pem
    CERT_KEY_PATH=$CERTBOT_LIVE/privkey.pem
fi

# Use these lines to download pcre from git
USE_EXTERNAL_PCRE=1
if [ $USE_EXTERNAL_PCRE -ne 0 ]
then
    NGINX_BUILD_FLAGS="$NGINX_BUILD_FLAGS --with-pcre=$ROOT_PATH/sources/pcre"
fi

# Use these lines to download openssl from git
USE_GIT_OPENSSL=0
if [ $USE_GIT_OPENSSL -ne 0 ]
then
    NGINX_BUILD_FLAGS="$NGINX_BUILD_FLAGS --with-openssl=$ROOT_PATH/sources/openssl"
fi

USE_CLANG=0
if [ $USE_CLANG -ne 0 ]
then
    NGINX_BUILD_FLAGS="$NGINX_BUILD_FLAGS --with-cc=clang"
fi

if [ $NGINX_DEBUG -ne 0 ]
then
    NGINX_BUILD_FLAGS="$NGINX_BUILD_FLAGS --with-debug"
fi

